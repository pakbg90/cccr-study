pipeline {
  agent {
    kubernetes {
      yamlFile 'kube/agent.yaml'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        container('maven') {
          git branch: 'main', url: 'https://github.com/pakbg90/cccr-study.git'
        }
      }
    }
    stage('Build') {
      steps {
        container('maven') {
          sh 'mvn clean package -DskipTests=true'
        }
      }
    }
    stage('Test') {
      steps {
        container('maven') {
          sh 'mvn test'
        }
      }
    }

    stage('Update K8s Manifests & Push') {
      environment {
      githubUser = 'pakbg90' //Ryan Jang
      githubEmail = 'pakbg90@naver.com' //c1t1d0s7@example.com
      githubId = 'pakbg90' //c1t1d0s7 
      githubRepo = 'cccr-study-deploy' //jenkins-kube-deploy
      githubURL = "https://github.com/${githubId}/${githubRepo}.git"
      dockerhubId = 'pakbg90' //c1t1d0s7
      dockerhubRepo = 'mykube' //hello-world
    }

    stage('Build & Tag & Push Docker Image') {
      steps {
        container('kaniko') {
          sh 'executor --context=dir://$WORKSPACE \
                       --destination=${dockerhubId}/${dockerhubRepo}:$BUILD_NUMBER \
                       --destination=${dockerhubId}/${dockerhubRepo}:latest'
        }
      }
    }

    steps {
      container('git') {
        git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}"
        sh "git config --global --add safe.directory ${workspace}"
        sh "git config --global user.name ${githubUser}"
        sh "git config --global user.email ${githubEmail}"
        sh 'sed -i "s/image:.*/image: ${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml'
        sh 'git add deployment.yaml'
        sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"'
        withCredentials([gitUsernamePassword(credentialsId: 'github-cert', gitToolName: 'Default')]) {
          sh 'git push --set-upstream origin main'
        }
      }
    }

  }
}